{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onUploadSuccess\n}) => {\n  _s();\n  const [isUploading, setIsUploading] = useState(false);\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('student_performance_data', file);\n    try {\n      const response = await fetch('http://localhost:5001/main/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      onUploadSuccess(data);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert('File upload failed. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    disabled: isUploading,\n    children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this) : 'Upload File', /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      hidden: true,\n      onChange: handleFileUpload,\n      accept: \".csv,.xlsx,.xls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"iM8/aiMEO5Xrk8fXFL7kjRs1wVs=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","Button","CircularProgress","jsxDEV","_jsxDEV","FileUploader","onUploadSuccess","_s","isUploading","setIsUploading","handleFileUpload","event","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","status","data","json","error","console","alert","variant","component","disabled","children","size","fileName","_jsxFileName","lineNumber","columnNumber","type","hidden","onChange","accept","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, CircularProgress } from '@mui/material';\n\nconst FileUploader = ({ onUploadSuccess }) => {\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setIsUploading(true);\n\n    const formData = new FormData();\n    formData.append('student_performance_data', file);\n\n    try {\n      const response = await fetch('http://localhost:5001/main/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      onUploadSuccess(data);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert('File upload failed. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      component=\"label\"\n      disabled={isUploading}\n    >\n      {isUploading ? <CircularProgress size={24} /> : 'Upload File'}\n      <input\n        type=\"file\"\n        hidden\n        onChange={handleFileUpload}\n        accept=\".csv,.xlsx,.xls\"\n      />\n    </Button>\n  );\n};\n\nexport default FileUploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEXH,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,0BAA0B,EAAEL,IAAI,CAAC;IAEjD,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCpB,eAAe,CAACmB,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCE,KAAK,CAAC,uCAAuC,CAAC;IAChD,CAAC,SAAS;MACRpB,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACEL,OAAA,CAACH,MAAM;IACL6B,OAAO,EAAC,WAAW;IACnBC,SAAS,EAAC,OAAO;IACjBC,QAAQ,EAAExB,WAAY;IAAAyB,QAAA,GAErBzB,WAAW,gBAAGJ,OAAA,CAACF,gBAAgB;MAACgC,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,aAAa,eAC7DlC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXC,MAAM;MACNC,QAAQ,EAAE/B,gBAAiB;MAC3BgC,MAAM,EAAC;IAAiB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAAC/B,EAAA,CA/CIF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/ScatterPlot.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = ({\n  data\n}) => {\n  const processedData = data.map(student => ({\n    name: `${student['first name']} ${student['last name']}`,\n    'Theory Tests': parseFloat(student['theory tests total (real)']),\n    'Practical Tests': parseFloat(student['practical tests total (real)'])\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"number\",\n        dataKey: \"Theory Tests\",\n        name: \"Theory Tests\",\n        unit: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        type: \"number\",\n        dataKey: \"Practical Tests\",\n        name: \"Practical Tests\",\n        unit: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          strokeDasharray: '3 3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n        name: \"Students\",\n        data: processedData,\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","ScatterPlot","data","processedData","map","student","name","parseFloat","width","height","children","margin","top","right","bottom","left","fileName","_jsxFileName","lineNumber","columnNumber","type","dataKey","unit","cursor","strokeDasharray","fill","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/ScatterPlot.js"],"sourcesContent":["import React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst ScatterPlot = ({ data }) => {\n  const processedData = data.map(student => ({\n    name: `${student['first name']} ${student['last name']}`,\n    'Theory Tests': parseFloat(student['theory tests total (real)']),\n    'Practical Tests': parseFloat(student['practical tests total (real)']),\n  }));\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n        <CartesianGrid />\n        <XAxis type=\"number\" dataKey=\"Theory Tests\" name=\"Theory Tests\" unit=\"%\" />\n        <YAxis type=\"number\" dataKey=\"Practical Tests\" name=\"Practical Tests\" unit=\"%\" />\n        <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n        <Scatter name=\"Students\" data={processedData} fill=\"#8884d8\" />\n      </ScatterChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default ScatterPlot;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5G,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,aAAa,GAAGD,IAAI,CAACE,GAAG,CAACC,OAAO,KAAK;IACzCC,IAAI,EAAE,GAAGD,OAAO,CAAC,YAAY,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE;IACxD,cAAc,EAAEE,UAAU,CAACF,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAChE,iBAAiB,EAAEE,UAAU,CAACF,OAAO,CAAC,8BAA8B,CAAC;EACvE,CAAC,CAAC,CAAC;EAEH,oBACEL,OAAA,CAACF,mBAAmB;IAACU,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5CV,OAAA,CAACR,YAAY;MAACmB,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MAAAL,QAAA,gBACjEV,OAAA,CAACJ,aAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjBnB,OAAA,CAACN,KAAK;QAAC0B,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAC,cAAc;QAACf,IAAI,EAAC,cAAc;QAACgB,IAAI,EAAC;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3EnB,OAAA,CAACL,KAAK;QAACyB,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAC,iBAAiB;QAACf,IAAI,EAAC,iBAAiB;QAACgB,IAAI,EAAC;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjFnB,OAAA,CAACH,OAAO;QAAC0B,MAAM,EAAE;UAAEC,eAAe,EAAE;QAAM;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CnB,OAAA,CAACP,OAAO;QAACa,IAAI,EAAC,UAAU;QAACJ,IAAI,EAAEC,aAAc;QAACsB,IAAI,EAAC;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE1B,CAAC;AAACO,EAAA,GAlBIzB,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
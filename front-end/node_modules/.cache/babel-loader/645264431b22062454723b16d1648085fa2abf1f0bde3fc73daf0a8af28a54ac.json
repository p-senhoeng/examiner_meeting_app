{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/GradeDistributionChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRADES = ['A+', 'A', 'B', 'C', 'D', 'E'];\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c', '#d0ed57'];\nconst GradeDistributionChart = ({\n  files\n}) => {\n  if (!files || files.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available. Please upload a file or wait for data to load.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const data = GRADES.map(grade => {\n    const entry = {\n      grade\n    };\n    files.forEach(file => {\n      if (file && file.name && file.data) {\n        entry[file.name] = file.data[grade] || 0;\n      }\n    });\n    return entry;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '24px',\n        fontWeight: 'bold',\n        marginBottom: '20px'\n      },\n      children: \"Grade Distribution Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), files.map((file, index) => file && file.name && /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: file.name,\n          fill: COLORS[index % COLORS.length]\n        }, file.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = GradeDistributionChart;\nexport default GradeDistributionChart;\nvar _c;\n$RefreshReg$(_c, \"GradeDistributionChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","GRADES","COLORS","GradeDistributionChart","files","length","children","fileName","_jsxFileName","lineNumber","columnNumber","data","map","grade","entry","forEach","file","name","style","width","maxWidth","margin","padding","fontSize","fontWeight","marginBottom","height","strokeDasharray","dataKey","index","fill","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/GradeDistributionChart.js"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst GRADES = ['A+', 'A', 'B', 'C', 'D', 'E'];\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c', '#d0ed57'];\n\nconst GradeDistributionChart = ({ files }) => {\n  if (!files || files.length === 0) {\n    return <div>No data available. Please upload a file or wait for data to load.</div>;\n  }\n\n  const data = GRADES.map(grade => {\n    const entry = { grade };\n    files.forEach(file => {\n      if (file && file.name && file.data) {\n        entry[file.name] = file.data[grade] || 0;\n      }\n    });\n    return entry;\n  });\n\n  return (\n    <div style={{ width: '100%', maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n      <h2 style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '20px' }}>Grade Distribution Chart</h2>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"grade\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          {files.map((file, index) => (\n            file && file.name && (\n              <Bar \n                key={file.name} \n                dataKey={file.name} \n                fill={COLORS[index % COLORS.length]} \n              />\n            )\n          ))}\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default GradeDistributionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
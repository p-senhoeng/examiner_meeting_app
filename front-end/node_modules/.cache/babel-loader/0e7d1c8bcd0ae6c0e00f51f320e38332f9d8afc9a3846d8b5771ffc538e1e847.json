{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/StudentPerformance.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPerformance = () => {\n  _s();\n  const [columns, setColumns] = useState([]);\n  const [studentData, setStudentData] = useState([]);\n  const [tableName, setTableName] = useState('');\n  const [chartData, setChartData] = useState([]);\n  const handleFileUpload = async file => {\n    const formData = new FormData();\n    formData.append('student_performance_data', file);\n    try {\n      const response = await fetch('http://localhost:5001/main/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('Upload successful:', result);\n      handleUploadSuccess(result);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert('File upload failed. Please try again.');\n    }\n  };\n  const handleUploadSuccess = data => {\n    setColumns(data.columns);\n    setStudentData(data.data);\n    setTableName(data.table_name);\n    updateChartData(data.data);\n  };\n  const updateChartData = data => {\n    const gradeCounts = data.reduce((acc, student) => {\n      const grade = student['grade level'];\n      acc[grade] = (acc[grade] || 0) + 1;\n      return acc;\n    }, {});\n    const chartData = Object.entries(gradeCounts).map(([grade, count]) => ({\n      grade,\n      count\n    }));\n    setChartData(chartData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-performance\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Performance Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv,.xlsx,.xls\",\n      onChange: e => handleFileUpload(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), tableName && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Table: \", tableName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this), studentData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Student Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: column\n            }, column, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: studentData.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student[column]\n            }, `${student.id}-${column}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this))\n          }, student.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grade Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPerformance, \"dtLad4bvWPHlIMg6aAQ4ejBqiZY=\");\n_c = StudentPerformance;\nexport default StudentPerformance;\nvar _c;\n$RefreshReg$(_c, \"StudentPerformance\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","StudentPerformance","_s","columns","setColumns","studentData","setStudentData","tableName","setTableName","chartData","setChartData","handleFileUpload","file","formData","FormData","append","response","fetch","method","body","ok","Error","status","result","json","console","log","handleUploadSuccess","error","alert","data","table_name","updateChartData","gradeCounts","reduce","acc","student","grade","Object","entries","map","count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","length","column","id","width","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/StudentPerformance.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst StudentPerformance = () => {\n  const [columns, setColumns] = useState([]);\n  const [studentData, setStudentData] = useState([]);\n  const [tableName, setTableName] = useState('');\n  const [chartData, setChartData] = useState([]);\n\n  const handleFileUpload = async (file) => {\n    const formData = new FormData();\n    formData.append('student_performance_data', file);\n\n    try {\n      const response = await fetch('http://localhost:5001/main/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('Upload successful:', result);\n      handleUploadSuccess(result);\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert('File upload failed. Please try again.');\n    }\n  };\n\n  const handleUploadSuccess = (data) => {\n    setColumns(data.columns);\n    setStudentData(data.data);\n    setTableName(data.table_name);\n    updateChartData(data.data);\n  };\n\n  const updateChartData = (data) => {\n    const gradeCounts = data.reduce((acc, student) => {\n      const grade = student['grade level'];\n      acc[grade] = (acc[grade] || 0) + 1;\n      return acc;\n    }, {});\n\n    const chartData = Object.entries(gradeCounts).map(([grade, count]) => ({\n      grade,\n      count\n    }));\n\n    setChartData(chartData);\n  };\n\n  return (\n    <div className=\"student-performance\">\n      <h1>Student Performance Data</h1>\n      <input \n        type=\"file\" \n        accept=\".csv,.xlsx,.xls\" \n        onChange={(e) => handleFileUpload(e.target.files[0])} \n      />\n      \n      {tableName && <h2>Table: {tableName}</h2>}\n      \n      {studentData.length > 0 && (\n        <div className=\"data-table\">\n          <h3>Student Data</h3>\n          <table>\n            <thead>\n              <tr>\n                {columns.map((column) => (\n                  <th key={column}>{column}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {studentData.map((student) => (\n                <tr key={student.id}>\n                  {columns.map((column) => (\n                    <td key={`${student.id}-${column}`}>{student[column]}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {chartData.length > 0 && (\n        <div className=\"grade-chart\">\n          <h3>Grade Distribution</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"grade\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"count\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StudentPerformance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
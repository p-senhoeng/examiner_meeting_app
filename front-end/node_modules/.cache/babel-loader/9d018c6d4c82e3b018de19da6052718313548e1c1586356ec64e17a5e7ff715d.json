{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Typography, Paper, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  const gradeOrder = ['B', 'B+', 'A-', 'A', 'A+'];\n  const totalStudents = data.length;\n  const gradeDistribution = data.reduce((acc, student) => {\n    const grade = student['grade level'];\n    acc[grade] = (acc[grade] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = gradeOrder.map(grade => {\n    const count = gradeDistribution[grade] || 0;\n    const percentage = (count / totalStudents * 100).toFixed(2);\n    return {\n      grade,\n      count,\n      percentage: parseFloat(percentage)\n    };\n  });\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '5px',\n          border: '1px solid #ccc'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Grade: ${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Number of Students: ${payload[0].value}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Percentage: ${payload[1].value.toFixed(2)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Grade Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\",\n          orientation: \"left\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"left\",\n          dataKey: \"count\",\n          fill: \"#8884d8\",\n          name: \"Number of Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"right\",\n          dataKey: \"percentage\",\n          fill: \"#82ca9d\",\n          name: \"Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"This bar chart displays the distribution of grades across all students. Each grade level is represented by two bars: - The blue bar shows the number of students who achieved that grade. - The green bar represents the percentage of students in that grade level. The grades are ordered from B to A+ to show the progression of performance. This visualization helps to quickly identify the most common grades, the overall performance trend of the class, and the proportion of students in each grade level.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","Typography","Paper","Box","jsxDEV","_jsxDEV","StackedBarChart","data","gradeOrder","totalStudents","length","gradeDistribution","reduce","acc","student","grade","chartData","map","count","percentage","toFixed","parseFloat","CustomTooltip","active","payload","label","style","backgroundColor","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","value","elevation","sx","p","variant","gutterBottom","width","height","strokeDasharray","dataKey","yAxisId","orientation","stroke","content","fill","name","mt","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { Typography, Paper, Box } from '@mui/material';\n\nconst StackedBarChart = ({ data }) => {\n  const gradeOrder = ['B', 'B+', 'A-', 'A', 'A+'];\n  const totalStudents = data.length;\n\n  const gradeDistribution = data.reduce((acc, student) => {\n    const grade = student['grade level'];\n    acc[grade] = (acc[grade] || 0) + 1;\n    return acc;\n  }, {});\n\n  const chartData = gradeOrder.map(grade => {\n    const count = gradeDistribution[grade] || 0;\n    const percentage = (count / totalStudents * 100).toFixed(2);\n    return {\n      grade,\n      count,\n      percentage: parseFloat(percentage)\n    };\n  });\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div style={{ backgroundColor: 'white', padding: '5px', border: '1px solid #ccc' }}>\n          <p>{`Grade: ${label}`}</p>\n          <p>{`Number of Students: ${payload[0].value}`}</p>\n          <p>{`Percentage: ${payload[1].value.toFixed(2)}%`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Paper elevation={2} sx={{ p: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>Grade Distribution</Typography>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"grade\" />\n          <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n          <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend />\n          <Bar yAxisId=\"left\" dataKey=\"count\" fill=\"#8884d8\" name=\"Number of Students\" />\n          <Bar yAxisId=\"right\" dataKey=\"percentage\" fill=\"#82ca9d\" name=\"Percentage\" />\n        </BarChart>\n      </ResponsiveContainer>\n      <Box mt={2}>\n        <Typography variant=\"body2\">\n          This bar chart displays the distribution of grades across all students. \n          Each grade level is represented by two bars:\n          - The blue bar shows the number of students who achieved that grade.\n          - The green bar represents the percentage of students in that grade level.\n          The grades are ordered from B to A+ to show the progression of performance. \n          This visualization helps to quickly identify the most common grades, the overall performance trend of the class,\n          and the proportion of students in each grade level.\n        </Typography>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default StackedBarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
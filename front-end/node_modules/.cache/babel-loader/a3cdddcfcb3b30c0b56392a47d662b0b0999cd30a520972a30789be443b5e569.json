{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  const processedData = data.map(student => ({\n    name: `${student['first name']} ${student['last name']}`,\n    'Theory Tests': parseFloat(student['theory tests total (real)']),\n    'Practical Tests': parseFloat(student['practical tests total (real)']),\n    'Homework': parseFloat(student['homework total (real)']),\n    'Project': parseFloat(student['project total (real)'])\n  }));\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: processedData,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Theory Tests\",\n        stackId: \"a\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Practical Tests\",\n        stackId: \"a\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Homework\",\n        stackId: \"a\",\n        fill: \"#ffc658\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Project\",\n        stackId: \"a\",\n        fill: \"#ff8042\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","StackedBarChart","data","processedData","map","student","name","parseFloat","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","stackId","fill","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst StackedBarChart = ({ data }) => {\n  const processedData = data.map(student => ({\n    name: `${student['first name']} ${student['last name']}`,\n    'Theory Tests': parseFloat(student['theory tests total (real)']),\n    'Practical Tests': parseFloat(student['practical tests total (real)']),\n    'Homework': parseFloat(student['homework total (real)']),\n    'Project': parseFloat(student['project total (real)']),\n  }));\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={processedData}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"Theory Tests\" stackId=\"a\" fill=\"#8884d8\" />\n        <Bar dataKey=\"Practical Tests\" stackId=\"a\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"Homework\" stackId=\"a\" fill=\"#ffc658\" />\n        <Bar dataKey=\"Project\" stackId=\"a\" fill=\"#ff8042\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default StackedBarChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5G,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACpC,MAAMC,aAAa,GAAGD,IAAI,CAACE,GAAG,CAACC,OAAO,KAAK;IACzCC,IAAI,EAAE,GAAGD,OAAO,CAAC,YAAY,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE;IACxD,cAAc,EAAEE,UAAU,CAACF,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAChE,iBAAiB,EAAEE,UAAU,CAACF,OAAO,CAAC,8BAA8B,CAAC,CAAC;IACtE,UAAU,EAAEE,UAAU,CAACF,OAAO,CAAC,uBAAuB,CAAC,CAAC;IACxD,SAAS,EAAEE,UAAU,CAACF,OAAO,CAAC,sBAAsB,CAAC;EACvD,CAAC,CAAC,CAAC;EAEH,oBACEL,OAAA,CAACF,mBAAmB;IAACU,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5CV,OAAA,CAACT,QAAQ;MAACW,IAAI,EAAEC,aAAc;MAAAO,QAAA,gBAC5BV,OAAA,CAACL,aAAa;QAACgB,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCf,OAAA,CAACP,KAAK;QAACuB,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBf,OAAA,CAACN,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTf,OAAA,CAACJ,OAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXf,OAAA,CAACH,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVf,OAAA,CAACR,GAAG;QAACwB,OAAO,EAAC,cAAc;QAACC,OAAO,EAAC,GAAG;QAACC,IAAI,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDf,OAAA,CAACR,GAAG;QAACwB,OAAO,EAAC,iBAAiB;QAACC,OAAO,EAAC,GAAG;QAACC,IAAI,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5Df,OAAA,CAACR,GAAG;QAACwB,OAAO,EAAC,UAAU;QAACC,OAAO,EAAC,GAAG;QAACC,IAAI,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDf,OAAA,CAACR,GAAG;QAACwB,OAAO,EAAC,SAAS;QAACC,OAAO,EAAC,GAAG;QAACC,IAAI,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE1B,CAAC;AAACI,EAAA,GAxBIlB,eAAe;AA0BrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
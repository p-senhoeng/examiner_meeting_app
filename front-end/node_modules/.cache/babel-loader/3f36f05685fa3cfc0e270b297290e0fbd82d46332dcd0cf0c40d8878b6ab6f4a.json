{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Typography, Paper, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  const gradeDistribution = data.reduce((acc, student) => {\n    const grade = student['grade level'];\n    acc[grade] = (acc[grade] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = Object.entries(gradeDistribution).map(([grade, count]) => ({\n    grade,\n    count,\n    percentage: (count / data.length * 100).toFixed(2)\n  }));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Grade Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\",\n          orientation: \"left\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"left\",\n          dataKey: \"count\",\n          fill: \"#8884d8\",\n          name: \"Number of Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"right\",\n          dataKey: \"percentage\",\n          fill: \"#82ca9d\",\n          name: \"Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"This chart shows the distribution of grades across all students. The blue bars represent the number of students in each grade level, while the green bars show the percentage of students in each grade level. This visualization helps to identify the overall performance trend of the class.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Typography","Paper","Box","jsxDEV","_jsxDEV","StackedBarChart","data","gradeDistribution","reduce","acc","student","grade","chartData","Object","entries","map","count","percentage","length","toFixed","elevation","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","yAxisId","orientation","stroke","fill","name","mt","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Typography, Paper, Box } from '@mui/material';\nconst StackedBarChart = ({ data }) => {\n  const gradeDistribution = data.reduce((acc, student) => {\n    const grade = student['grade level'];\n    acc[grade] = (acc[grade] || 0) + 1;\n    return acc;\n  }, {});\n\n  const chartData = Object.entries(gradeDistribution).map(([grade, count]) => ({\n    grade,\n    count,\n    percentage: (count / data.length * 100).toFixed(2)\n  }));\n\n  return (\n    <Paper elevation={2} sx={{ p: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>Grade Distribution</Typography>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"grade\" />\n          <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n          <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n          <Tooltip />\n          <Legend />\n          <Bar yAxisId=\"left\" dataKey=\"count\" fill=\"#8884d8\" name=\"Number of Students\" />\n          <Bar yAxisId=\"right\" dataKey=\"percentage\" fill=\"#82ca9d\" name=\"Percentage\" />\n        </BarChart>\n      </ResponsiveContainer>\n      <Box mt={2}>\n        <Typography variant=\"body2\">\n          This chart shows the distribution of grades across all students. \n          The blue bars represent the number of students in each grade level, \n          while the green bars show the percentage of students in each grade level.\n          This visualization helps to identify the overall performance trend of the class.\n        </Typography>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default StackedBarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
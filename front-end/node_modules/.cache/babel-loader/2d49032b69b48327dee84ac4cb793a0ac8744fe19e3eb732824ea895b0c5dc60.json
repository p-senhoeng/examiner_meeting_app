{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/ScatterPlot.js\";\nimport React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScatterPlot = ({\n  data\n}) => {\n  const plotData = data.map(student => ({\n    name: `${student['first name']} ${student['last name']}`,\n    theory: parseFloat(student['theory tests total (real)']),\n    practical: parseFloat(student['practical tests total (real)'])\n  }));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Theory vs Practical Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n        margin: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          type: \"number\",\n          dataKey: \"theory\",\n          name: \"Theory Score\",\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"number\",\n          dataKey: \"practical\",\n          name: \"Practical Score\",\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          cursor: {\n            strokeDasharray: '3 3'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n          name: \"Students\",\n          data: plotData,\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"This scatter plot compares students' performance in theory tests against their performance in practical tests. Each point represents a student, with their theory score on the x-axis and practical score on the y-axis. This visualization helps identify any correlation between theoretical and practical skills, as well as spotting students who excel in one area but may need support in another.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","ScatterPlot","data","plotData","map","student","name","theory","parseFloat","practical","Paper","elevation","sx","p","children","Typography","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","bottom","left","type","dataKey","unit","cursor","strokeDasharray","fill","Box","mt","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/ScatterPlot.js"],"sourcesContent":["import React from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst ScatterPlot = ({ data }) => {\n  const plotData = data.map(student => ({\n    name: `${student['first name']} ${student['last name']}`,\n    theory: parseFloat(student['theory tests total (real)']),\n    practical: parseFloat(student['practical tests total (real)'])\n  }));\n\n  return (\n    <Paper elevation={2} sx={{ p: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>Theory vs Practical Performance</Typography>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n          <CartesianGrid />\n          <XAxis type=\"number\" dataKey=\"theory\" name=\"Theory Score\" unit=\"%\" />\n          <YAxis type=\"number\" dataKey=\"practical\" name=\"Practical Score\" unit=\"%\" />\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n          <Scatter name=\"Students\" data={plotData} fill=\"#8884d8\" />\n        </ScatterChart>\n      </ResponsiveContainer>\n      <Box mt={2}>\n        <Typography variant=\"body2\">\n          This scatter plot compares students' performance in theory tests against their performance in practical tests. \n          Each point represents a student, with their theory score on the x-axis and practical score on the y-axis. \n          This visualization helps identify any correlation between theoretical and practical skills, \n          as well as spotting students who excel in one area but may need support in another.\n        </Typography>\n      </Box>\n    </Paper>\n  );\n};\n\n\nexport default ScatterPlot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
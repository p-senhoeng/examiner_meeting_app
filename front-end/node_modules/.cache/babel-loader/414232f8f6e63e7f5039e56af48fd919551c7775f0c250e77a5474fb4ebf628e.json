{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\nimport FileUploader from './components/FileUploader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const handleDataReceived = newData => {\n    if (newData && newData.file_name && newData.grade_distribution) {\n      setFiles(prevFiles => [...prevFiles, {\n        name: newData.file_name,\n        data: newData.grade_distribution\n      }]);\n    } else {\n      setError('Received invalid data format from the server.');\n    }\n  };\n  const fetchBarChartData = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Fetching bar chart data...');\n      const response = await fetch('/charts/barChart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          table_name: 'students'\n        })\n      });\n      console.log('Response status:', response.status);\n      console.log('Response headers:', response.headers);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Response error text:', errorText);\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('Received data:', data);\n      if (data.data) {\n        setFiles(prevFiles => [...prevFiles, {\n          name: 'Database Data',\n          data: data.data\n        }]);\n      } else {\n        setError('Received invalid data format from the server.');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setError(`Error fetching bar chart data: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchBarChartData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '32px',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: \"Grade Distribution Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onDataReceived: handleDataReceived\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GradeDistributionChart, {\n        files: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GradeDistributionPieChart, {\n        files: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available. Please upload a file or wait for data to load.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UpCjKvxK0fnMtStPBo1bAZObT/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GradeDistributionChart","GradeDistributionPieChart","FileUploader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","files","setFiles","isLoading","setIsLoading","error","setError","handleDataReceived","newData","file_name","grade_distribution","prevFiles","name","data","fetchBarChartData","console","log","response","fetch","method","headers","body","JSON","stringify","table_name","status","ok","errorText","text","Error","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontSize","fontWeight","textAlign","margin","onDataReceived","length","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\nimport FileUploader from './components/FileUploader';\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleDataReceived = (newData) => {\n    if (newData && newData.file_name && newData.grade_distribution) {\n      setFiles(prevFiles => [...prevFiles, { \n        name: newData.file_name, \n        data: newData.grade_distribution \n      }]);\n    } else {\n      setError('Received invalid data format from the server.');\n    }\n  };\n\n  const fetchBarChartData = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Fetching bar chart data...');\n      const response = await fetch('/charts/barChart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ table_name: 'students' }),\n      });\n\n      console.log('Response status:', response.status);\n      console.log('Response headers:', response.headers);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Response error text:', errorText);\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('Received data:', data);\n\n      if (data.data) {\n        setFiles(prevFiles => [...prevFiles, { name: 'Database Data', data: data.data }]);\n      } else {\n        setError('Received invalid data format from the server.');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setError(`Error fetching bar chart data: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchBarChartData();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading data...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '32px', fontWeight: 'bold', textAlign: 'center', margin: '20px 0' }}>Grade Distribution Analysis</h1>\n      <FileUploader onDataReceived={handleDataReceived} />\n      {files.length > 0 ? (\n        <>\n          <GradeDistributionChart files={files} />\n          <GradeDistributionPieChart files={files} />\n        </>\n      ) : (\n        <div>No data available. Please upload a file or wait for data to load.</div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\nimport FileUploader from './components/FileUploader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleUploadSuccess = newData => {\n    setIsLoading(true);\n    setError(null);\n    if (newData && newData.file_name && newData.grade_distribution) {\n      setFiles(prevFiles => [...prevFiles, {\n        name: newData.file_name,\n        data: newData.grade_distribution\n      }]);\n    } else {\n      setError('Received invalid data format from the server.');\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '32px',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: \"Grade Distribution Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onUploadSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Processing data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), files.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GradeDistributionChart, {\n        files: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GradeDistributionPieChart, {\n        files: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available. Please upload a CSV file to see the grade distribution.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vJAVxXMsh+4muiqv7NnW7QbdsjE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GradeDistributionChart","GradeDistributionPieChart","FileUploader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","files","setFiles","isLoading","setIsLoading","error","setError","handleUploadSuccess","newData","file_name","grade_distribution","prevFiles","name","data","className","children","style","fontSize","fontWeight","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","color","length","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\nimport FileUploader from './components/FileUploader';\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleUploadSuccess = (newData) => {\n    setIsLoading(true);\n    setError(null);\n\n    if (newData && newData.file_name && newData.grade_distribution) {\n      setFiles(prevFiles => [...prevFiles, { \n        name: newData.file_name, \n        data: newData.grade_distribution \n      }]);\n    } else {\n      setError('Received invalid data format from the server.');\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '32px', fontWeight: 'bold', textAlign: 'center', margin: '20px 0' }}>Grade Distribution Analysis</h1>\n      <FileUploader onUploadSuccess={handleUploadSuccess} />\n      {isLoading && <div>Processing data...</div>}\n      {error && <div style={{ color: 'red' }}>Error: {error}</div>}\n      {files.length > 0 ? (\n        <>\n          <GradeDistributionChart files={files} />\n          <GradeDistributionPieChart files={files} />\n        </>\n      ) : (\n        <div>No data available. Please upload a CSV file to see the grade distribution.</div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
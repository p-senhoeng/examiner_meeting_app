{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\nimport FileUploader from './FileUploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleDataReceived = newData => {\n    const fileName = newData.file_name || `File ${files.length + 1}`;\n    const gradeDistribution = newData.grade_distribution || {};\n    setFiles(prevFiles => [...prevFiles, {\n      name: fileName,\n      data: gradeDistribution\n    }]);\n  };\n  const fetchBarChartData = async () => {\n    try {\n      const response = await fetch('/charts/barChart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          table_name: 'students'\n        }) // Assuming 'students' is the table name\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch bar chart data');\n      }\n      const data = await response.json();\n      if (data.data) {\n        setFiles(prevFiles => [...prevFiles, {\n          name: 'Database Data',\n          data: data.data\n        }]);\n      }\n    } catch (error) {\n      console.error('Error fetching bar chart data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchBarChartData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '32px',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: \"Grade Distribution Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onDataReceived: handleDataReceived\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GradeDistributionChart, {\n      files: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GradeDistributionPieChart, {\n      files: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Q2RYUcr07MgGv5yVCV31YurpQrA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GradeDistributionChart","GradeDistributionPieChart","FileUploader","jsxDEV","_jsxDEV","App","_s","files","setFiles","handleDataReceived","newData","fileName","file_name","length","gradeDistribution","grade_distribution","prevFiles","name","data","fetchBarChartData","response","fetch","method","headers","body","JSON","stringify","table_name","ok","Error","json","error","console","className","children","style","fontSize","fontWeight","textAlign","margin","_jsxFileName","lineNumber","columnNumber","onDataReceived","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\nimport FileUploader from './FileUploader';\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n\n  const handleDataReceived = (newData) => {\n    const fileName = newData.file_name || `File ${files.length + 1}`;\n    const gradeDistribution = newData.grade_distribution || {};\n    \n    setFiles(prevFiles => [...prevFiles, { name: fileName, data: gradeDistribution }]);\n  };\n\n  const fetchBarChartData = async () => {\n    try {\n      const response = await fetch('/charts/barChart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ table_name: 'students' }), // Assuming 'students' is the table name\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch bar chart data');\n      }\n\n      const data = await response.json();\n      if (data.data) {\n        setFiles(prevFiles => [...prevFiles, { name: 'Database Data', data: data.data }]);\n      }\n    } catch (error) {\n      console.error('Error fetching bar chart data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchBarChartData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '32px', fontWeight: 'bold', textAlign: 'center', margin: '20px 0' }}>Grade Distribution Analysis</h1>\n      <FileUploader onDataReceived={handleDataReceived} />\n      <GradeDistributionChart files={files} />\n      <GradeDistributionPieChart files={files} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
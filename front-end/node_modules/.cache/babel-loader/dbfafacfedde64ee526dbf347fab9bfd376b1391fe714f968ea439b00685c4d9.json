{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockFiles = [{\n  name: '2023 Trimester A',\n  data: {\n    'A+': 10,\n    'A': 20,\n    'B': 30,\n    'C': 25,\n    'D': 10,\n    'E': 5\n  }\n}, {\n  name: '2023 Trimester B',\n  data: {\n    'A+': 15,\n    'A': 25,\n    'B': 35,\n    'C': 20,\n    'D': 5,\n    'E': 0\n  }\n}, {\n  name: '2024 Trimester A',\n  data: {\n    'A+': 12,\n    'A': 22,\n    'B': 33,\n    'C': 23,\n    'D': 8,\n    'E': 2\n  }\n}];\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState(mockFiles);\n  const handleFileUpload = event => {\n    // 这里应该实现文件上传和解析逻辑\n    // 为了演示，我们只是添加一个新的模拟文件\n    const newFile = {\n      name: `新上传文件 ${files.length + 1}`,\n      data: {\n        'A+': 14,\n        'A': 24,\n        'B': 34,\n        'C': 22,\n        'D': 5,\n        'E': 1\n      }\n    };\n    setFiles([...files, newFile]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '32px',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: \"Grade Distribution Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        },\n        id: \"fileInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        style: {\n          backgroundColor: '#3b82f6',\n          color: 'white',\n          padding: '10px 15px',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontWeight: 'bold'\n        },\n        children: \"Upload CSV Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GradeDistributionChart, {\n      files: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GradeDistributionPieChart, {\n      files: files\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PSw5AETTZTth3HG7pfFTtRC8Hno=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GradeDistributionChart","GradeDistributionPieChart","jsxDEV","_jsxDEV","mockFiles","name","data","App","_s","files","setFiles","handleFileUpload","event","newFile","length","className","children","style","fontSize","fontWeight","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","accept","onChange","display","id","htmlFor","backgroundColor","color","padding","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GradeDistributionChart from './components/Charts/GradeDistributionChart';\n\nimport GradeDistributionPieChart from './components/Charts/GradeDistributionPieChart';\n\nconst mockFiles = [\n  { \n    name: '2023 Trimester A', \n    data: { 'A+': 10, 'A': 20, 'B': 30, 'C': 25, 'D': 10, 'E': 5 } \n  },\n  { \n    name: '2023 Trimester B', \n    data: { 'A+': 15, 'A': 25, 'B': 35, 'C': 20, 'D': 5, 'E': 0 } \n  },\n  { \n    name: '2024 Trimester A', \n    data: { 'A+': 12, 'A': 22, 'B': 33, 'C': 23, 'D': 8, 'E': 2 } \n  },\n];\n\nconst App = () => {\n  const [files, setFiles] = useState(mockFiles);\n\n  const handleFileUpload = (event) => {\n    // 这里应该实现文件上传和解析逻辑\n    // 为了演示，我们只是添加一个新的模拟文件\n    const newFile = {\n      name: `新上传文件 ${files.length + 1}`,\n      data: { 'A+': 14, 'A': 24, 'B': 34, 'C': 22, 'D': 5, 'E': 1 }\n    };\n    setFiles([...files, newFile]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '32px', fontWeight: 'bold', textAlign: 'center', margin: '20px 0' }}>Grade Distribution Chart</h1>\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          onChange={handleFileUpload}\n          style={{ display: 'none' }}\n          id=\"fileInput\"\n        />\n        <label\n          htmlFor=\"fileInput\"\n          style={{\n            backgroundColor: '#3b82f6',\n            color: 'white',\n            padding: '10px 15px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontWeight: 'bold',\n          }}\n        >\n          Upload CSV Files\n        </label>\n      </div>\n      <GradeDistributionChart files={files} />\n      <GradeDistributionPieChart files={files} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Typography, Paper, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackedBarChart = ({\n  data\n}) => {\n  const gradeOrder = ['B', 'B+', 'A-', 'A', 'A+'];\n  const gradeDistribution = data.reduce((acc, student) => {\n    const grade = student['grade level'];\n    acc[grade] = (acc[grade] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = gradeOrder.map(grade => ({\n    grade,\n    count: gradeDistribution[grade] || 0\n  }));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Grade Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#8884d8\",\n          name: \"Number of Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"This bar chart displays the distribution of grades across all students. Each bar represents a grade level, and the height of the bar indicates the number of students who achieved that grade. The grades are ordered from B to A+ to show the progression of performance. This visualization helps to quickly identify the most common grades and the overall performance trend of the class.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = StackedBarChart;\nexport default StackedBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Typography","Paper","Box","jsxDEV","_jsxDEV","StackedBarChart","data","gradeOrder","gradeDistribution","reduce","acc","student","grade","chartData","map","count","elevation","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","name","mt","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/StackedBarChart.js"],"sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Typography, Paper, Box } from '@mui/material';\n\nconst StackedBarChart = ({ data }) => {\n  const gradeOrder = ['B', 'B+', 'A-', 'A', 'A+'];\n  const gradeDistribution = data.reduce((acc, student) => {\n    const grade = student['grade level'];\n    acc[grade] = (acc[grade] || 0) + 1;\n    return acc;\n  }, {});\n\n  const chartData = gradeOrder.map(grade => ({\n    grade,\n    count: gradeDistribution[grade] || 0\n  }));\n\n  return (\n    <Paper elevation={2} sx={{ p: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>Grade Distribution</Typography>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"grade\" />\n          <YAxis />\n          <Tooltip />\n          <Bar dataKey=\"count\" fill=\"#8884d8\" name=\"Number of Students\" />\n        </BarChart>\n      </ResponsiveContainer>\n      <Box mt={2}>\n        <Typography variant=\"body2\">\n          This bar chart displays the distribution of grades across all students. \n          Each bar represents a grade level, and the height of the bar indicates the number of students who achieved that grade. \n          The grades are ordered from B to A+ to show the progression of performance. \n          This visualization helps to quickly identify the most common grades and the overall performance trend of the class.\n        </Typography>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default StackedBarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
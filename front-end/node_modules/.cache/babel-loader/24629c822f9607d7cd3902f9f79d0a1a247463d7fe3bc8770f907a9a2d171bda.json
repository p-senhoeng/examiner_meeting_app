{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/HeatmapChart.js\";\nimport React from 'react';\nimport { Typography, Paper, Box } from '@mui/material';\nimport { ResponsiveContainer, Heatmap, XAxis, YAxis, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeatmapChart = ({\n  data\n}) => {\n  const assessments = ['theory tests total (real)', 'practical tests total (real)', 'homework total (real)', 'project total (real)', 'engagement total (real)'];\n  const calculateCorrelation = (x, y) => {\n    const n = x.length;\n    let sumX = 0,\n      sumY = 0,\n      sumXY = 0,\n      sumX2 = 0,\n      sumY2 = 0;\n    for (let i = 0; i < n; i++) {\n      sumX += x[i];\n      sumY += y[i];\n      sumXY += x[i] * y[i];\n      sumX2 += x[i] * x[i];\n      sumY2 += y[i] * y[i];\n    }\n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));\n    return numerator / denominator;\n  };\n  const correlationData = assessments.flatMap((assessment1, i) => assessments.map((assessment2, j) => {\n    if (i === j) return {\n      x: i,\n      y: j,\n      value: 1\n    };\n    const x = data.map(student => parseFloat(student[assessment1]) || 0);\n    const y = data.map(student => parseFloat(student[assessment2]) || 0);\n    return {\n      x: i,\n      y: j,\n      value: calculateCorrelation(x, y)\n    };\n  }));\n  const colorScale = value => {\n    const hue = ((1 - Math.abs(value)) * 240).toString(10);\n    return `hsl(${hue}, 70%, 50%)`;\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Assessment Correlation Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(Heatmap, {\n        data: correlationData,\n        type: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"x\",\n          type: \"category\",\n          tickFormatter: index => assessments[index].split(' ')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"y\",\n          type: \"category\",\n          tickFormatter: index => assessments[index].split(' ')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: ({\n            payload\n          }) => {\n            if (payload && payload.length) {\n              const {\n                x,\n                y,\n                value\n              } = payload[0].payload;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: 'white',\n                  padding: '5px',\n                  border: '1px solid #ccc'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: `${assessments[x]} vs ${assessments[y]}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: `Correlation: ${value.toFixed(2)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this);\n            }\n            return null;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"This heatmap shows the correlation between different assessment types. Darker colors indicate stronger correlations (either positive or negative). Blue shades represent positive correlations, while red shades represent negative correlations. A correlation of 1 means perfect positive correlation, -1 means perfect negative correlation, and 0 means no correlation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = HeatmapChart;\nexport default HeatmapChart;\nvar _c;\n$RefreshReg$(_c, \"HeatmapChart\");","map":{"version":3,"names":["React","Typography","Paper","Box","ResponsiveContainer","Heatmap","XAxis","YAxis","Tooltip","jsxDEV","_jsxDEV","HeatmapChart","data","assessments","calculateCorrelation","x","y","n","length","sumX","sumY","sumXY","sumX2","sumY2","i","numerator","denominator","Math","sqrt","correlationData","flatMap","assessment1","map","assessment2","j","value","student","parseFloat","colorScale","hue","abs","toString","elevation","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","width","height","type","dataKey","tickFormatter","index","split","content","payload","style","backgroundColor","padding","border","toFixed","mt","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/596/examiner_meeting_app/front-end/src/components/Charts/HeatmapChart.js"],"sourcesContent":["import React from 'react';\nimport { Typography, Paper, Box } from '@mui/material';\nimport { ResponsiveContainer, Heatmap, XAxis, YAxis, Tooltip } from 'recharts';\n\nconst HeatmapChart = ({ data }) => {\n  const assessments = [\n    'theory tests total (real)',\n    'practical tests total (real)',\n    'homework total (real)',\n    'project total (real)',\n    'engagement total (real)'\n  ];\n\n  const calculateCorrelation = (x, y) => {\n    const n = x.length;\n    let sumX = 0, sumY = 0, sumXY = 0, sumX2 = 0, sumY2 = 0;\n    for (let i = 0; i < n; i++) {\n      sumX += x[i];\n      sumY += y[i];\n      sumXY += x[i] * y[i];\n      sumX2 += x[i] * x[i];\n      sumY2 += y[i] * y[i];\n    }\n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));\n    return numerator / denominator;\n  };\n\n  const correlationData = assessments.flatMap((assessment1, i) =>\n    assessments.map((assessment2, j) => {\n      if (i === j) return { x: i, y: j, value: 1 };\n      const x = data.map(student => parseFloat(student[assessment1]) || 0);\n      const y = data.map(student => parseFloat(student[assessment2]) || 0);\n      return {\n        x: i,\n        y: j,\n        value: calculateCorrelation(x, y)\n      };\n    })\n  );\n\n  const colorScale = (value) => {\n    const hue = ((1 - Math.abs(value)) * 240).toString(10);\n    return `hsl(${hue}, 70%, 50%)`;\n  };\n\n  return (\n    <Paper elevation={2} sx={{ p: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>Assessment Correlation Heatmap</Typography>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <Heatmap\n          data={correlationData}\n          type=\"grid\"\n        >\n          <XAxis\n            dataKey=\"x\"\n            type=\"category\"\n            tickFormatter={(index) => assessments[index].split(' ')[0]}\n          />\n          <YAxis\n            dataKey=\"y\"\n            type=\"category\"\n            tickFormatter={(index) => assessments[index].split(' ')[0]}\n          />\n          <Tooltip\n            content={({ payload }) => {\n              if (payload && payload.length) {\n                const { x, y, value } = payload[0].payload;\n                return (\n                  <div style={{ backgroundColor: 'white', padding: '5px', border: '1px solid #ccc' }}>\n                    <p>{`${assessments[x]} vs ${assessments[y]}`}</p>\n                    <p>{`Correlation: ${value.toFixed(2)}`}</p>\n                  </div>\n                );\n              }\n              return null;\n            }}\n          />\n        </Heatmap>\n      </ResponsiveContainer>\n      <Box mt={2}>\n        <Typography variant=\"body2\">\n          This heatmap shows the correlation between different assessment types. \n          Darker colors indicate stronger correlations (either positive or negative). \n          Blue shades represent positive correlations, while red shades represent negative correlations.\n          A correlation of 1 means perfect positive correlation, -1 means perfect negative correlation, \n          and 0 means no correlation.\n        </Typography>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default HeatmapChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}